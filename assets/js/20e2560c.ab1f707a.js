"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[8039],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=d(r),y=o,f=u["".concat(l,".").concat(y)]||u[y]||p[y]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},3007:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:4},i="Node Query Mode",c={unversionedId:"cli-reference/bifrost-query-mode",id:"cli-reference/bifrost-query-mode",title:"Node Query Mode",description:"",source:"@site/docs/cli-reference/bifrost-query-mode.md",sourceDirName:"cli-reference",slug:"/cli-reference/bifrost-query-mode",permalink:"/strata-cli/docs/current/cli-reference/bifrost-query-mode",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Indexer Query Mode",permalink:"/strata-cli/docs/current/cli-reference/genus-query-mode"},next:{title:"Wallet Mode",permalink:"/strata-cli/docs/current/cli-reference/wallet-mode"}},l={},d=[],s={toc:d},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"node-query-mode"},"Node Query Mode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Command: node-query [block-by-height|block-by-id|transaction-by-id]\nNode query mode\nCommand: node-query block-by-height [options]\nGet the block at a given height\n  -h, --host <value>       The host of the node. (mandatory)\n  --port <value>           Port Node node. (mandatory)\n  -s, --secure <value>     Enables the secure connection to the node. (optional)\n  --height <value>         The height of the block. (mandatory)\nCommand: node-query block-by-id [options]\nGet the block with a given id\n  -h, --host <value>       The host of the node. (mandatory)\n  --port <value>           Port Node node. (mandatory)\n  -s, --secure <value>     Enables the secure connection to the node. (optional)\n  --block-id <value>       The id of the block in base 58. (mandatory)\nCommand: node-query transaction-by-id [options]\nGet the transaction with a given id\n  -h, --host <value>       The host of the node. (mandatory)\n  --port <value>           Port Node node. (mandatory)\n  -s, --secure <value>     Enables the secure connection to the node. (optional)\n  --transaction-id <value>\n                           The id of the transaction in base 58. (mandatory)                  \n")))}p.isMDXComponent=!0}}]);