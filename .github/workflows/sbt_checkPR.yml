name: Check and Deploy
on:
  push:
    branches: ['*']
    tags: ["*"]

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1
      - name: Run unit tests
        run: sbt "checkPR"
      - uses: actions/upload-artifact@v3
        with:
          name: unit-test-reports
          path: cli/target/test-reports/
  integration-test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-test
    services:
      # Label used to access the service container
      node:
        # Docker Hub image
        image: ghcr.io/plasmalaboratories/plasma-node:0.1.3
        #
        ports:
          - 9084:9084 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1
      - name: Run integration tests
        run: sbt "cli / IntegrationTest / test"
      - uses: actions/download-artifact@v3
        with:
          path: cli/target/test-reports/
          name: unit-test-reports
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success()
        with:
          files: |
            cli/target/test-reports/**/*.xml
            cli/target/it-reports/**/*.xml
  publish:
    name: Deploy to Maven Central
    runs-on: ubuntu-latest
    needs: [ unit-test, integration-test ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1
      - name: Deploy 
        run: sbt "buildClient; ci-release"
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment (release)
        id: deployment-release
        if: github.ref == 'refs/heads/main'
        with:
          token: '${{ github.token }}'
          initial-status: success
          environment: release
          environment-url: https://s01.oss.sonatype.org/content/repositories/releases/org/plasmalabs/plasma-cli_2.13/
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment (snapshot)
        id: deployment-snap
        if: github.ref != 'refs/heads/main'
        with:
          token: '${{ github.token }}'
          initial-status: success
          environment-url: https://s01.oss.sonatype.org/content/repositories/snapshots/xyz/plasmalabs/plasma-cli_2.13/
          environment: snapshot
  deploy-docs:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [ unit-test, integration-test ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: microsite/package-lock.json
      - name: Install dependencies
        run: cd microsite && npm ci
      - name: Build website
        run: cd microsite &&  npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./microsite/build
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
